'''
FileName: data_manager.py
Author: Chuncheng
Version: V0.0
Purpose: Read and provide CT Image Data
'''

# %%
import os
import numpy as np
import SimpleITK as sitk

from tqdm.auto import tqdm

from config import CONFIG

# %%

data_folder = CONFIG.get('CT_raw_data_folder',
                         'CT_raw_data_folder is not provided')


def list_subject_folders():
    ''' Find the directory containing legal .dcm files '''
    return [e
            for e in os.listdir(data_folder)
            if os.path.isdir(os.path.join(data_folder, e))
            if len(dcm_files(e)) > 1]


def dcm_files(folder):
    ''' Return a list of the .dcm files in the folder '''
    files = [e
             for e in os.listdir(os.path.join(data_folder, folder))
             if e.endswith('.dcm')]
    print('Found {} .dcm files in {}'.format(len(files),
                                             os.path.join(data_folder, folder)))
    return files


def get_image(folder):
    ''' Return the 3D img_array, generated by the .dcm files in the folder '''
    dcm_files = [os.path.join(data_folder, folder, e)
                 for e in os.listdir(os.path.join(data_folder, folder))]
    dcm_files = sorted(dcm_files,
                       key=lambda x: int(os.path.basename(x).split('.')[0]))
    print('Found {} files, with extents of {}'.format(len(dcm_files),
                                                      set([e.split('.')[-1] for e in dcm_files])))

    img_list = [sitk.GetArrayFromImage(sitk.ReadImage(e))
                for e in tqdm(dcm_files, 'Reading .dcm files')]
    img_array = np.concatenate(img_list, axis=0)
    print('Generate img_array with shape of {}'.format(img_array.shape))
    return img_array


# %%
